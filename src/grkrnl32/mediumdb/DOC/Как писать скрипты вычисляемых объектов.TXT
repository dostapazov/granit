Скрипт на языке Lua должен начинаться со 
строки 
--Lua Script
Перед вызовом устанавливаются следующие 
глобальные переменные
count - Количество переменных
x0 .. xN  где N= count-1 значения записей входящих в состав вычисляемого
id0...idN где N= count-1 ID записей входящих в состав вычисляемого


Доступны следующие внешние функции
int bin_and(int v1,int v2  ) - возвращает 
результат двоичного И
int bin_or (int v1,int v2  ) - возвращает 
результат двоичного ИЛИ
int bin_xor(int v1,int v2  ) - возвращает 
результат двоичного имключающего ИЛИ
int bin_not(int v          ) - возвращает 
инверсное значение аргумента
int bin_shl(int v1,int n   ) - возвращает 
результат сдвига влево  на n бит
int bin_shr(int v1,int n   ) - возвращает 
результат сдвига вправо на n бит

функции получения min/max аварийных и предупредительных уставок
возвращают пару значений 
0,???    - если запись не существует
1,число  - если запись существует и значение уставки

int, numeric get_max_alarm (rec_id) - возвращает максимальную аварийную уставку
int, numeric get_min_alarm (rec_id) - возвращает минимальную  аварийную уставку
int, numeric get_max_danger(rec_id) - возвращает максимальную предупредительную уставку
int, numeric get_min_danger(rec_id) - возвращает минимальную  предупредительную уставку

Пример скрипта сигнализации выхода за аварийную уставку:

--Lua
success,alarm = get_max_alarm(id0); --Получаем уставку для записи в составе вычисляемого
if success == 1 and x0>alarm then -- Если существует и значение превысило уставку то 
 return 1;  -- возвращаем  ВКЛ;
end
return 0; 


Далее руководство по языку LUA
https://www.lua.org/pil/contents.html
